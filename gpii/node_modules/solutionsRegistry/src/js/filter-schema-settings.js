/* eslint-env node */
"use strict";
var fluid = require("infusion");
var gpii  = fluid.registerNamespace("gpii");

fluid.registerNamespace("gpii.universal.solutionsRegistry");

/**
 *
 * Filter a settings schema so that it only has checks ("properties") for the specific observed settings.  Used in
 * the sanity checks of the solutions registry itself, and in settings validation middleware.
 *
 * @param {Object} observedSettings - The observed settings that we should use to filter the schema.
 * @param {Object} settingsSchema - The schema to filter.
 * @return {Object} The filtered schema.
 *
 */
gpii.universal.solutionsRegistry.filterSchemaToSettings = function (observedSettings, settingsSchema) {
    if (typeof observedSettings === "object") {
        var filteredSchema     = fluid.copy(settingsSchema);
        var requiredKeys       = fluid.keys(observedSettings);
        var allProperties      = fluid.get(settingsSchema, "properties");
        var filteredProperties = fluid.filterKeys(allProperties, requiredKeys);
        if (fluid.jQueryStandalone.isEmptyObject(filteredProperties)) {
            fluid.set(filteredSchema, "properties", filteredProperties);
        }
        else {
            delete filteredSchema.properties;
        }
        return filteredSchema;
    }
    else {
        return settingsSchema;
    }
};
