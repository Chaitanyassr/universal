/*
 * GPII User Save Handler
 *
 * Copyright 2013 OCAD University
 * Copyright 2018 OCAD University
 *
 * Licensed under the New BSD license. You may not use this file except in
 * compliance with this License.
 *
 * The research leading to these results has received funding from the European Union's
 * Seventh Framework Programme (FP7/2007-2013)
 * under grant agreement no. 289016.
 *
 * You may obtain a copy of the License at
 * https://github.com/GPII/universal/blob/master/LICENSE.txt
 */

"use strict";

var fluid = require("infusion"),
    gpii = fluid.registerNamespace("gpii");

fluid.registerNamespace("gpii.flowManager");

fluid.defaults("gpii.flowManager.userSave.handler", {
    gradeNames: ["kettle.request.http"],
    invokers: {
        handleRequest: {
            funcName: "gpii.flowManager.userSave.handleRequest",
            args: [
                "{flowManager}.preferencesServer",
                "{request}.req.params.gpiiKey",
                "{request}.req.body",
                "{request}"
            ]
        }
    }
});

gpii.flowManager.userSave.handleRequest = function (preferencesServer, gpiiKey, preferences, request) {
    var prefsPromise;
    var writeMethod = request.req.method.toUpperCase();

    if (writeMethod === "POST") {
        fluid.log("gpii.flowManager.userSave called: creating preferences");
        prefsPromise = preferencesServer.createPreferences(preferences, null);
    } else if (writeMethod === "PUT") {
        fluid.log("gpii.flowManager.userSave called: updating preferences for the GPII key " + gpiiKey);
        prefsPromise = preferencesServer.updatePreferences(gpiiKey, preferences);
    }

    prefsPromise.then(request.events.onSuccess.fire, request.events.onError.fire);
};
