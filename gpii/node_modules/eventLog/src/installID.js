/*
 * Retrieves an "installation ID", which is something that uniquely identifies a particular machine.
 *
 * The installation ID is a string that's based on the OS specific "machine ID".
 *
 * Copyright 2017 Raising the Floor - International
 *
 * Licensed under the New BSD license. You may not use this file except in
 * compliance with this License.
 *
 * The R&D leading to these results received funding from the
 * Department of Education - Grant H421A150005 (GPII-APCP). However,
 * these results do not necessarily represent the policy of the
 * Department of Education, and you should not assume endorsement by the
 * Federal Government.
 *
 * You may obtain a copy of the License at
 * https://github.com/GPII/universal/blob/master/LICENSE.txt
 */

"use strict";

var fluid = require("infusion"),
    gpii = fluid.registerNamespace("gpii"),
    os = require("os"),
    fs = require("fs"),
    crypto = require("crypto");

fluid.defaults("gpii.installID", {
    gradeNames: ["fluid.component", "fluid.contextAware"],
    contextAwareness: {
        platform: {
            checks: {
                test: {
                    contextValue: "{gpii.contexts.test}",
                    gradeNames: "gpii.installID.test",
                    priority: "first"
                },
                windows: {
                    contextValue: "{gpii.contexts.windows}",
                    gradeNames: "gpii.installID.windows"
                },
                linux: {
                    contextValue: "{gpii.contexts.linux}",
                    gradeNames: "gpii.installID.standard"
                }
            },
            defaultGradeNames: "gpii.installID.test"
        }
    },
    members: {
        installID: "@expand:{that}.getInstallID()"
    },
    invokers: {
        getInstallID: "gpii.installID.get({that}.getMachineID)",
        getMachineID: "fluid.notImplemented"
    }
});

fluid.defaults("gpii.installID.test", {
    invokers: {
        getMachineID: "gpii.installID.machineID.test"
    }
});

fluid.defaults("gpii.installID.windows", {
    invokers: {
        getMachineID: "gpii.installID.machineID.windows"
    }
});

fluid.defaults("gpii.installID.standard", {
    invokers: {
        getMachineID: "gpii.installID.machineID.standard"
    }
});

/**
 * Gets the installation ID, using the given machine ID.
 *
 * @param getMachineID {Function} The OS specific function to get the machine ID.
 * @return {string} The installation ID
 */
gpii.installID.get = function (getMachineID) {
    var machineID = getMachineID();
    return crypto.createHash("sha1").update(machineID).digest("base64").replace(/=+$/gi, "");
};

fluid.registerNamespace("gpii.installID.machineID");

/**
 * Retrieve the machine ID from Windows.
 *
 * @return {string} The machine ID.
 */
gpii.installID.machineID.windows = function () {
    fluid.log(fluid.logLevels.WARN, "TODO: Implement windows machine ID");
    return "WINDOWS-MACHINE-ID";
};

/**
 * Retrieve the machine ID from /etc/machine-id.
 *
 * @return {string} The machine ID.
 */
gpii.installID.machineID.standard = function () {
    return fs.readFileSync("/etc/machine-id");
};

gpii.installID.machineID.test = function () {
    return "TEST-MACHINE-ID";
};
