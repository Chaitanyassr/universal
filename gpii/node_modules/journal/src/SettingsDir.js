/**
 * GPII SettingsDir.js
 *
 * Determines the user's settings directory on a variety of platforms,
 * and manages establishment of a subdirectory "/gpii" to hold writable files
 * for the system's journal and other purposes
 *
 * Copyright 2016 Raising the Floor - International
 *
 * Licensed under the New BSD license. You may not use this file except in
 * compliance with this License.
 *
 */

"use strict";

var fluid = require("infusion"),
    gpii = fluid.registerNamespace("gpii"),
    os = require("os"),
    fs = require("fs");

fluid.defaults("gpii.settingsDir", {
    gradeNames: "fluid.component",
    members: {
        gpiiSettingsDir: "@expand:{that}.getGpiiSettingsDir()"
    },
    invokers: {
        getGpiiSettingsDir: "gpii.settingsDir.gpii({that}.getSettingsDir)",
        getSettingsDir: "gpii.settingsDir.temp"
    },
    listeners: {
        "onCreate.createGpiiDir": "gpii.settingsDir.createGpii"
    }
});

gpii.settingsDir.createGpii = function (that) {
    fluid.log(fluid.logLevel.WARN, "Creating GPII settings directory in ", that.gpiiSettingsDir);
    try { // See code skeleton in http://stackoverflow.com/questions/13696148/node-js-create-folder-or-use-existing
        fs.mkdirSync(that.gpiiSettingsDir);
    } catch (e) {
        if (e.code !== "EEXIST") {
            fluid.fail("Unable to create GPII settings directory, code is " + e.code + ": exception ", e);
        }
    }
};

gpii.settingsDir.gpii = function (getSettingsDir) {
    return getSettingsDir() + "/gpii";
};

gpii.settingsDir.windows = function () {
    return process.env.APPDATA;
};

gpii.settingsDir.standard = function () {
    return os.homedir();
};

gpii.settingsDir.temp = function () {
    return os.tmpdir();
};
