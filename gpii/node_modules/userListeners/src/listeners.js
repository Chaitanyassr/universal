/* User listeners
 *
 * Copyright 2017 Raising the Floor - International
 *
 * Licensed under the New BSD license. You may not use this file except in
 * compliance with this License.
 *
 * The R&D leading to these results received funding from the
 * Department of Education - Grant H421A150005 (GPII-APCP). However,
 * these results do not necessarily represent the policy of the
 * Department of Education, and you should not assume endorsement by the
 * Federal Government.
 *
 * You may obtain a copy of the License at
 * https://github.com/GPII/universal/blob/master/LICENSE.txt
 */

"use strict";

var fluid = require("infusion");

var gpii = fluid.registerNamespace("gpii");

fluid.registerNamespace("gpii.userListeners");

fluid.defaults("gpii.userListeners", {
    gradeNames: ["fluid.component", "fluid.contextAware"],
    components: {
        pcsc: {
            type: "gpii.pcscUserListener"
        }
    },
    events: {
        "onStartListeners": null,
        "onStopListeners": null
    },
    listeners: {
        "onCreate.startListeners": "{that}.events.onStartListeners"
    }
});

fluid.defaults("gpii.userListener", {
    gradeNames: ["fluid.component"],
    events: {
        "onStartListeners": null,
        "onStopListeners": null
    },
    invokers: {
        startListener: "fluid.notImplemented"
    },
    listeners: {
        "{userListeners}.events.onStartListeners": "{that}.events.onStartListeners",
        "onStartListeners": "{that}.startListener"
    }
});
